# Helper functions
a(){ alias "$1"="$2" }
_ualias() { unalias "$1" 2>/dev/null }
f() {
  _ualias "$1"
  eval "$1() { $2; }" 
}

# One-char alias
# Package management
a p 'pacman'
a y 'yay'
a g "git clone --depth 1 https://github.com/$1/$2.git"

# Git and GitHub
a gc 'git commit'
a gl 'git fetch origin && git log --all --graph --oneline'
a gd 'git diff --cached'

# Worktree `gw`
a gwc 'git worktree add'
a gwr 'git worktree list'
a gwd 'git worktree remove'

# Git tracking management `gt
a gtc 'git add' 
a gtd 'git rm --cached -r'

# Git staging management `gs`
a gsc 'git add'
a gsd 'git restore --staged'
a gsr 'git status --short'
a gsd 'git restore --staged'

# Git repository synchronization `gsy`
a gp 'git pull'
# a dlgit 'function _clone(){git clone git@github.com:$1/$2.git} _clone'
a gd 'git diff'
a gb 'git branch'
a gba 'git branch -a'
a gw 'git switch'
a gwm 'git switch main'
a gcob 'git checkout -b'

# GitHub Issues `gi`
a gic 'gh issue create'
f gir 'gh issue view "$1" --comments'
a gil 'gh issue list --limit 1000' # READ
a giu 'gh issue edit' # UPDATE
a gid 'gh issue close' # DELETE

a gif 'gh issue list | grep $1'
## Comment
a gim 'gh issue comment'

# GitHub Pull Requests `gp`
a gpc 'gh pr create'
a gpl 'gh pr list --limit 1000'
a ppv 'gh pr view'
a gpe 'gh pr edit'
a gpd 'gh pr close'

## Comment
a gpm 'gh pr comment'

# GitHub Comments `gm`
a gce 'gh comment edit'
# a gcd 'gh comment ' 

# GitHub Actions `gha`

# GitHub plugins `ge`
a gei 'gh extension install'
a gel 'gh extension list'
a ged 'gh extension remove'


alias newrepo='git init && git add . && git commit -m "Initial commit" && gh repo create $(basename $(pwd)) --private --confirm && git branch -M main && git remote add origin https://github.com/$(gh auth status --json login -q ".user.login")/$(basename $(pwd)).git && git push -u origin main'

# Shell
a l 'ls -ahli'
# f i ''
a rd 'rm -r'
a rf 'rm'

## Docker
a de 'docker exec'
a dl 'docker logs'
a dp 'docker ps'

## Python
a pv 'python3 -m venv'
a py 'python3'
a pi 'pi'
a pc 'pip config'
a ipy 'ipython'

## Node.js
a nc 'npm config'
a ni 'npm install'

## Aliases to edit config files

# EASY_CONFIG
a na "nvim $HOME/dotfiles/ALIASES"
# a nb
# a nc
# a nd
# a ne
# a nf
a ng "nvim $HOME/dotfiles/PKG_GH.txt"
a nh "nvim $HOME/.config/hypr/hyprland.conf"
# a ni
# a nj
# a nk
# a nl "/sbin/nl"
# a nm "nvim $HOME/.config/espanso/match/matches.yml"
a nn "nvim $HOME/.config/nvim/init.lua"
# a no
a np "nvim $HOME/dotfiles/PKG_PACMAN.txt"
a nq "nvim $HOME/dotfiles/QUTE_BROWSER_CONFIG.py"
# a nr
# a ns
# a nt
# a nu
# a nv
# a nw
# a nx
a ny "nvim $HOME/dotfiles/PKG_AUR.txt"
a nz "nvim $HOME/.zshrc"
a sz "source $HOME/.zshrc"
a n "nvim"

## GUI apps
a obsidian 'OZONE_PLATFORM=wayland obsidian &'
a cursor 'OZONE_PLATFORM=walland cursor &'
